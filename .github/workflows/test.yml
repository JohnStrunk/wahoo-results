---
name: "Test"

on:  # yamllint disable-line rule:truthy
  push:
    branches: [main]
    tags: ["*"]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [main]
  schedule:
    - cron: '43 16 * * 5'

env:
  # How long to run the executable automated tests
  TEST_DURATION_SECONDS: 60
  # https://github.com/upx/upx/releases
  UPX_VERSION: "5.0.2"

jobs:
  precommit:
    name: Pre-commit
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        # https://github.com/actions/checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Python
        # https://github.com/actions/setup-python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version-file: ".python-version"

      - name: Enable cache for pre-commit hooks
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.pythonLocation }}|${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            pre-commit|${{ env.pythonLocation }}
            pre-commit|

      # Add Scripts directory to the path so that pipenv (and associated
      # utilities) can be used once installed
      - name: Add python Scripts directory to path
        shell: cmd
        # Code-page switch is needed to write the env file as utf-8
        run: |
          chcp 65001
          python -c "import site; print(site.USER_SITE.replace('site-packages', 'Scripts'))" >> %GITHUB_PATH%
          chcp 1252

      - name: Install pre-commit
        shell: cmd
        run: python -m pip install pre-commit

      - name: Install pre-commit hooks
        shell: cmd
        run: pre-commit install-hooks

      - name: Run pre-commit checks
        shell: cmd
        run: pre-commit run -a

      - name: Run pre-commit gc
        shell: cmd
        run: pre-commit gc

  test:
    name: Test
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        # https://github.com/actions/checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install uv
        # https://github.com/astral-sh/setup-uv
        uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0

      - name: Set up Python
        # https://github.com/actions/setup-python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version-file: ".python-version"

      # Add Scripts directory to the path so that pipenv (and associated
      # utilities) can be used once installed
      - name: Add python Scripts directory to path
        shell: cmd
        # Code-page switch is needed to write the env file as utf-8
        run: |
          chcp 65001
          python -c "import site; print(site.USER_SITE.replace('site-packages', 'Scripts'))" >> %GITHUB_PATH%
          chcp 1252

      - name: pytest
        shell: cmd
        run: uv run --locked --group dev pytest

      - name: pyright
        shell: cmd
        run: uv run --locked --group dev pyright

  sbom:
    name: Software Bill of Materials
    if: github.event_name != 'pull_request'
    permissions:
      actions: read
      contents: write
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        # https://github.com/actions/checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Install uv
        # https://github.com/astral-sh/setup-uv
        uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0

      - name: Set up Python
        # https://github.com/actions/setup-python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version-file: ".python-version"

      # Add Scripts directory to the path so that pipenv (and associated
      # utilities) can be used once installed
      - name: Add python Scripts directory to path
        shell: cmd
        # Code-page switch is needed to write the env file as utf-8
        run: |
          chcp 65001
          python -c "import site; print(site.USER_SITE.replace('site-packages', 'Scripts'))" >> %GITHUB_PATH%
          chcp 1252

      - name: Generate requirements.txt
        shell: cmd
        run: uv export --locked --format requirements-txt > requirements.txt

      - name: Generate & upload SBOM
        # https://github.com/anchore/sbom-action
        uses: anchore/sbom-action@7b36ad622f042cab6f59a75c2ac24ccb256e9b45 # v0.20.4
        with:
          artifact-name: sbom-spdx.json
          dependency-snapshot: true
          file: requirements.txt
          format: spdx-json

  #     This action is currently disabled because it breaks PRs that aren't
  #     introducing new vulnerabilities
  #     - name: Check for security vulnerabilities
  #       # https://github.com/pypa/gh-action-pip-audit/
  #       uses: pypa/gh-action-pip-audit@1220774d901786e6f652ae159f7b6bc8fea6d266 # v1.1.0
  #       with:
  #         inputs: requirements.txt
  #         require-hashes: true
  #         summary: true


  build:
    name: Build
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        # https://github.com/actions/checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Install uv
        # https://github.com/astral-sh/setup-uv
        uses: astral-sh/setup-uv@d9e0f98d3fc6adb07d1e3d37f3043649ddad06a1 # v6.5.0

      - name: Set up Python
        # https://github.com/actions/setup-python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version-file: ".python-version"

      # Add Scripts directory to the path so that pipenv (and associated
      # utilities) can be used once installed
      - name: Add python Scripts directory to path
        if: runner.os == 'Windows'
        shell: cmd
        # Code-page switch is needed to write the env file as utf-8
        run: |
          chcp 65001
          python -c "import site; print(site.USER_SITE.replace('site-packages', 'Scripts'))" >> %GITHUB_PATH%
          chcp 1252

      - name: Install UPX
        if: runner.os == 'Windows'
        shell: cmd
        run: choco install -y upx --version ${{ env.UPX_VERSION }}

      - name: Build executable
        env:
          IPINFO_TOKEN: ${{ secrets.IPINFO_TOKEN }}
          SEGMENT_WRITE_KEY: ${{ secrets.SEGMENT_WRITE_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
        run: uv run --locked --no-dev python build.py

      - name: Save executable (macOS) as artifact
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: wahoo-results-macos
          path: wahoo-results
          if-no-files-found: error

      - name: Save executable (Windows) as artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: wahoo-results.exe
          path: wahoo-results.exe
          if-no-files-found: error

      - name: Grab screenshot (macOS)
        if: runner.os == 'macOS'
        run: ./wahoo-results --test screenshot

      - name: Grab screenshot (Windows)
        if: runner.os == 'Windows'
        shell: cmd
        run: wahoo-results.exe --test screenshot

      - name: Upload screenshot
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: build-screenshot-${{ runner.os }}
          path: screenshot-*.png
          if-no-files-found: error

  autotest:
    name: Autotest
    needs: [build]
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Load executable artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: wahoo-results.exe

      - name: Ensure config file does not exist
        shell: bash
        run: |
          [[ ! -e wahoo-results.ini ]]

      - name: Run autotest (no config file)
        timeout-minutes: 3
        shell: cmd
        run: wahoo-results.exe --loglevel=debug --test scripted:${{ env.TEST_DURATION_SECONDS }}

      - name: Ensure config file exists
        shell: bash
        run: |
          [[ -e wahoo-results.ini ]]

      - name: Run autotest (with config file)
        timeout-minutes: 3
        shell: cmd
        run: wahoo-results.exe --loglevel=debug --test scripted:${{ env.TEST_DURATION_SECONDS }}

  success:
    name: Successful CI
    needs: [autotest, precommit, test]
    runs-on: windows-latest
    steps:
      - name: Success
        shell: cmd
        run: echo "CI was successful"

  release:
    name: Publish release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [success]
    runs-on: windows-latest
    permissions:
      contents: write
      discussions: write

    steps:
      - name: Checkout repository
        # https://github.com/actions/checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version-file: ".python-version"

      # Add Scripts directory to the path so that utilities can be used once installed
      - name: Add python Scripts directory to path
        shell: cmd
        # Code-page switch is needed to write the env file as utf-8
        run: |
          chcp 65001
          python -c "import site; print(site.USER_SITE.replace('site-packages', 'Scripts'))" >> %GITHUB_PATH%
          chcp 1252

      - name: Install sentry-cli
        shell: cmd
        run: python -m pip install --user sentry-cli

      - name: Download executable as artifact
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: wahoo-results.exe

      - name: Create sentry release
        shell: cmd
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: jstrunk-sentry
          SENTRY_PROJECT: wahoo-results
        run: |
          set VERSION=${{ github.ref_name }}
          set VERSION=%VERSION:~1%
          sentry-cli releases new --finalize wahoo-results@%VERSION%
          sentry-cli releases set-commits wahoo-results@%VERSION% --commit JohnStrunk/wahoo-results@${{ github.ref_name }}

      - name: Publish release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2.3.2
        with:
          name: Release ${{ github.ref_name }}
          draft: true
          files: |
            wahoo-results.exe
